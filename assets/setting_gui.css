@font-face {
  font-family: "HackNerdFontMono";
  src: url(./HackNerdFontMono-Regular.ttf);
}

:root {
  --unit: 16px;
  --ft-size-xl: calc(var(--unit) * 2);
  --ft-size-l: calc(var(--unit) * 1.25);
  --ft-size-m: calc(var(--unit) * 0.75);
  --ft-size-s: calc(var(--unit) * 0.63);
  --space-size-xxl: calc(var(--unit) * 3.25);
  --space-size-xl: calc(var(--unit) * 2);
  --space-size-l: calc(var(--unit) * 1.25);
  --space-size-m: calc(var(--unit) * 0.75);
  --space-size-s: calc(var(--unit) * 0.5);

  --default-font-family: hiraginosans, "hiragino kaku gothic pron", meiryo,
    arial, sans-serif;
  --nerd-font-family: "HackNerdFontMono";

  --ft-color: #feffff;
  --global-background-color: #2c2c2c;
  --active-background-color: #646464;
  /* --component-background-color: magenta; */

  width: 100vw;
  height: 100vh;
  font-size: var(--unit);
}

body {
  width: 100%;
  min-height: 100%;
  font-family: var(--default-font-family);
  font-size: var(--ft-size-m);
  padding: var(--space-size-l);
  color: var(--ft-color);
  background-color: var(--global-background-color);
}

.Main {
  > .title {
    font-size: var(--ft-size-xl);
  }

  > .separator_select {
    width: 100%;
    position: relative;
    margin-top: var(--space-size-m);

    > .description {
      /* none */
    }

    > .current_select {
      width: 100%;
      /* max-width: 360px; */
      display: inline-flex;
      justify-content: space-between;
      margin-top: var(--space-size-m);
      padding: var(--space-size-s); var(--space-size-m);
      border: 1px var(--ft-color) solid;
      border-radius: 4px;

      cursor: pointer;
    }

    > .options {
      width: 100%;
      /* max-width: 360px; */
      position: absolute;
      background-color: var(--global-background-color);
      border: 1px var(--ft-color) solid;
      border-radius: 4px;

      > .option {
        width: 100%;
        display: inline-flex;
        justify-content: space-between;
        padding: var(--space-size-s); var(--space-size-m);
        cursor: pointer;

        &:hover {
          background-color: var(--active-background-color);
        }
      }
    }
  }

  > .component_select {
    margin-top: var(--space-size-m);
    width: 100%;

    > .description {
      /* TODO */
    }

    > .segments {
      display: flex;
      flex-direction: row;
      width: 100%;
      gap: var(--space-size-m);

      > .left_segments, >.right_segments {
        flex: 1;

        border: 1px var(--ft-color) solid;
        border-radius: 4px;

        > .segment {
          display: flex;
          align-items: center;
          padding: var(--space-size-s);

          > .LComponent {
            flex: 1;
          }

          > .RComponent {
            flex: 1;
          }

          > .edit_button {
            padding: var(--space-size-s);
            border: 1px var(--ft-color) solid;
            border-radius: 4px;
          }

          > .remove_button {
            padding: var(--space-size-s);
            border: 1px var(--ft-color) solid;
            border-radius: 4px;
          }
        }

        > .add {
          display: flex;
          justify-content: center;
          margin-bottom: var(--space-size-m);

          > .add_button {
            padding: var(--space-size-s);
            border: 1px var(--ft-color) solid;
            border-radius: 4px;
          }
        }
      }

      > .right_segments {
        flex: 1;

        border: 1px var(--ft-color) solid;
        border-radius: 4px;
      }
    }
  }

  > .result {
    display: inline-flex;
    margin-top: var(--space-size-m);
    padding: var(--space-size-m);
    border: 1px var(--ft-color) solid;
    border-radius: 4px;
    width: 100%;

    > .l_prompt {
      display: inline-flex;

      > .segment {}
    }
  }
}

.LComponent {
  font-family: var(--nerd-font-family);
  white-space: nowrap;

  > .before_separator {
    /* background-color: var(--component-background-color); */
    /* color: var(--global-background-color); */
  }

  > .text {
    /* background-color: var(--component-background-color); */
  }

  > .after_separator {
    /* background-color: var(--global-background-color); */
    /* color: var(--component-background-color); */
  }
}

.RComponent {
  font-family: var(--nerd-font-family);
  white-space: nowrap;

  > .before_separator {
    /* background-color: var(--global-background-color); */
    /* color: var(--component-background-color); */
  }

  > .text {
    /* background-color: var(--component-background-color); */
  }

  > .after_separator {
    /* background-color: var(--component-background-color); */
    /* color: var(--global-background-color); */
  }
}
